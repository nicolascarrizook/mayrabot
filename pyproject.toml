[tool.poetry]
name = "nutrition-bot"
version = "0.1.0"
description = "Bot nutricional automatizado para generaci√≥n de planes alimenticios personalizados"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [
    {include = "api"},
    {include = "telegram_bot"},
    {include = "data_processor"},
    {include = "prompts"},
]

[tool.poetry.dependencies]
python = "^3.11"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=api",
    "--cov=telegram_bot",
    "--cov=data_processor",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"